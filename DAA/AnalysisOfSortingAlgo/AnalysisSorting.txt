avg Bubble
10 24 0.00
100 2438 0.000094
500 63888 0.001323
1000 254648 0.005551
5000 6244174 0.100289
10000 24883340 0.392785
50000 623351270 9.724364
100000 - 38.882288

Best Bubble
10 0 0.000001
100 0 0.000002
500 0 0.000003
1000 0 0.000010
5000 0 0.000026
10000 0 0.000087
50000 0 0.000424
100000 0 0.000714

Worst Bubble
10 45 0.000003
100 4950 0.000098
500 124750 0.002307
1000 499500 0.006709
5000 12497500 0.103236
10000 49995000 0.395791
50000 1249975000 9.950184
100000 - 39.867644

-----------------------
avg Selection sort
10 7 0.000002
100 96 0.000028
500 498 0.000667
1000 995 0.001752
5000 4989 0.045682
10000 9992 0.170458
50000 49989 4.169171
100000 99983 16.657978

best selection sort
10 0 0.000001
100 0 0.000034
500 0 0.000521
1000 0 0.003108
5000 0 0.045903
10000 0 0.169726
50000 0 4.167574
100000 0 16.662882

worst selection sort
10 45 0.000002
100 4950 0.000037
500 250 0.001110
1000 500 0.003384
5000 2500 0.048474
10000 5000 0.177946
50000 25000 4.386236
100000 50000 17.514223




---------------------------------
avg Insertion sort
10 0.000002
100 0.000052
500 0.000899
1000 0.002850
5000 0.032414
10000 0.112271
50000 2.800497
100000 11.202344

best Insertion sort
10 0.000001
100 0.000003
500 0.000008
1000 0.000007
5000 0.000051
10000 0.000170
50000 0.000628
100000 0.001261


worst Insertion sort
10 0.000002
100 0.000059
500 0.000547
1000  0.003310
5000 0.058911
10000 0.224601
50000 5.591818
100000 22.295033


--------------------------------
avg Merge sort
10 23 0.000004
100 542 0.000032
500 3829 0.000176
1000 8682 0.000499
5000 55204 0.002137
10000 120537 0.002991
50000 718126 0.014617 
100000 1536329 0.030948

best Merge sort
10 19 0.000004
100 356 0.000034
500 2272 0.000187
1000 5044 0.000394
5000 32004 0.002189
10000 69008 0.004448
50000 401952 0.014344
100000 853904 0.024302

worst Merge sort
10 15 0.000004
100 316 0.000034
500 2216 0.000133
1000 4932 0.000282
5000 29804 0.002134
10000 64608 0.003722
50000 382512 0.012336
100000 815024 0.025375

--------------------------
avg quick sort
10 11 0.000003
100 194 0.000016
500 1246 0.000121
1000 2698 0.000254
5000 15981 0.001135
10000 33783 0.003234
50000 198840 0.010411
100000 422643 0.015513

best quick sort
10 6 0.000002
100 63 0.000011
500 255 0.000037
1000 511 0.000086
5000 2952 0.000463
10000 5904 0.000728
50000 32767 0.003420
100000  65535 0.007297

worst quick sort
10 11 0.000003
100 112 0.000010
500 504 0.000025
1000 1010 0.000086
5000 5452 0.000374
10000 10904 0.001033
50000 57766 0.003799
100000 115534 0.008473


-------------------
avg counting sort
10 0.000004
100 0.000026
500 0.000112
1000 0.000337
5000 0.001455
10000 0.001887
50000 0.008609
100000 0.017021

sort counting sort
10 0.000005
100 0.000025
500 0.000149
1000 0.000180
5000 0.001119
10000 0.002208
50000 0.007797
100000 0.014461

reversorted counting sort
10 0.000003
100 0.000026
500 0.000113
1000 0.000319
5000 0.001119
10000 0.001689
50000  0.007746
100000 0.016479

....------------------
avg heap sort
10 0.000002
100 0.000026
500 0.000215
1000 0.000189
5000 0.002932
10000 0.004771
50000 0.017548
100000 0.035945

sorted heap sort
10 0.000004
100 0.000017
500 0.000105
1000 0.000460
5000 0.002793
10000 0.004613
50000 0.019744
100000 0.036496

unsorted heap sort
10 0.000003
100 0.000030
500 0.000111
1000 0.000307
5000 0.002597
10000 0.004264
50000 0.017881
100000 0.029594

------------------------
avg Radix sort
10 0.000006
100 0.000020
500 0.000092
1000 0.000311
5000 0.000773
10000 0.003906
50000 0.012594
100000 0.019010

sort Radix sort
10 0.000003
100 0.000014
500 0.000118
1000 0.000175
5000 0.001570
10000 0.002047
50000 0.011025
100000 0.019851

unsorted Radix sort
10 0.000004
100 0.000028
500 0.000125
1000 0.000233
5000 0.001167
10000 0.002316
50000 0.011080
100000 0.020677



sample code to try

// for(i=0;i<n ;i++) {		
    //      int ipiv = i;
	// 		for(j=i+1;j<n;j++) {
	// 		if(a[ipiv]>a[j]) {
	// 			ipiv = j; 			
	// 		}
    //      if(ipiv!=i) {
    //          temp = a[i];
	// 			a[i]=a[j];
	// 			a[j]=temp;
    //          swapCount++;
    //        }
	// 	}
	// }
